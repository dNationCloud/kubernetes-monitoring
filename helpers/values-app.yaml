# Example of application monitoring configuration

# Container label anchor
# This yaml anchor adds the `container` label to the Prometheus metrics provided by prometheus operator service monitor
# Note: Prometheus operator pod monitor adds the `container` label by default
containerLabel: &containerLabel
  sourceLabels: [__meta_kubernetes_pod_container_name]
  separator: ;
  regex: ^(.*)$
  targetLabel: container
  replacement: $1
  action: replace

appMonitoring:
  enabled: true
  apps:
  # Application Monitoring using the pod monitor CRD.
  - name: JVM-Actuator-App
    description: JVM Actuator Application
    # The name of the Prometheus job. The job name should be the same as the name which will be retrieved from the `jobLabel`,
    # see the `podMonitor` section.
    jobName: spring-boot-app
    templates:
    - name: javaActuator
    # https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#podmonitor
    podMonitor:
      # The label to use to retrieve the job name from.
      jobLabel: app
      # Namespaces to transfer from the kubernetes service to the target
      namespaceSelector:
        ## Match any namespace
        # any: true
        # Explicit list of namespace names to select
        matchNames:
        - default
      # Label selector for pods to which this PodMonitor applies
      selector:
        matchLabels:
          app: spring-boot-app
      # matchExpressions:
      #   - key: tier
      #     operator: In
      #     values:
      #     - cache
      #   - key: environment
      #     operator: NotIn
      #     values:
      #     - dev
      # Endpoints of the selected pod to be monitored
      # https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#podmetricsendpoint
      podMetricsEndpoints:
      # Name or number of the endpoint's target port
      - targetPort: 8080
        # Interval at which metrics should be scraped
        interval: 30s
        # HTTP path to scrape for metrics
        path: /actuator/prometheus
      - targetPort: 8888
        # Interval at which metrics should be scraped
        interval: 30s
        # HTTP path to scrape for metrics
        path: /actuator/prometheus
  # Application Monitoring using the service monitor CRD.
  - name: Python-Flask-App
    description: Python Flask Aapplication
    jobName: python-flask-app
    templates:
    - name: pythonFlask
    serviceMonitor:
      jobLabel: app
      namespaceSelector:
        matchNames:
          - default
      selector:
        matchLabels:
          app: python-flask-app
      endpoints:
      - targetPort: 5000
        interval: 30s
        path: /metrics
        relabelings:
        - *containerLabel
