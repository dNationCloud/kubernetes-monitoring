# Example of cluster monitoring configuration

# Container label anchor
# This yaml anchor adds the `container` label to the Prometheus metrics provided by prometheus operator service monitor
# Note: Prometheus operator pod monitor adds the `container` label by default
containerLabel: &containerLabel
  sourceLabels: [__meta_kubernetes_pod_container_name]
  separator: ;
  regex: ^(.*)$
  targetLabel: container
  replacement: $1
  action: replace

clusterMonitoring:
  enabled: true
  clusters:
  - name: Dev
    description: 'Kubernetes cluster with application monitoring'
    apps:
    # Application Monitoring using the service monitor CRD.
    - name: Python-Flask-App
      description: Python Flask Application
      jobName: python-flask-app
      templates:
        pythonFlask:
          enabled: true
      serviceMonitor:
        jobLabel: app
        namespaceSelector:
          matchNames:
          - default
        selector:
          matchLabels:
            app: python-flask-app
        endpoints:
        - targetPort: 5000
          interval: 30s
          path: /metrics
          relabelings:
          - *containerLabel
    # Application Monitoring using the pod monitor CRD.
    - name: JVM-Actuator-App
      description: JVM Actuator Application
      jobName: spring-boot-app
      templates:
        javaActuator:
          enabled: true
      podMonitor:
        jobLabel: app
        namespaceSelector:
          matchNames:
          - default
        selector:
          matchLabels:
            app: spring-boot-app
        podMetricsEndpoints:
        - targetPort: 8080
          interval: 30s
          path: /actuator/prometheus
        - targetPort: 8888
          interval: 30s
          path: /actuator/prometheus

templates:
  L1:
    k8s:
      # Override title for etcd health panel
      etcdHealth:
        panel:
          title: "Override Title"
      # Override warning threshold for running pods panel
      runningPods:
        panel:
          thresholds:
            warning: 95
