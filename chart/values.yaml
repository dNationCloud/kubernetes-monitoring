#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default values for dNation Kubernetes Monitoring are defined by merging of
# jsonnet/config.libsonnet and chart/values.yaml files.
# Full list of possible configuration parameters are listed in
# the project documentation ref: https://dnationcloud.github.io/kubernetes-monitoring/docs/documentation
# All default values can be overridden as in standard helm chart, see examples in helpers directory.
#

## Override the default value of 'app' label used by k8s objects
##
nameOverride: ""

## Override the deployment namespace
##
namespaceOverride: ""

## Provide a name to substitute for the full names of resources
##
fullnameOverride: ""

## Labels to apply to all resources
##
commonLabels: {}
# myLabel: myLabelValue

## Deploy a dnation-kubernetes-jsonnet-translator
## ref: https://github.com/dNationCloud/kubernetes-jsonnet-translator
##
dnation-kubernetes-jsonnet-translator:
  enabled: true
  image:
    # Arguments for translator container
    args:
    - '--libsonnet'
    - 'https://github.com/grafana/grafonnet-lib/grafonnet@daad85cf3fad3580e58029414630e29956aefe21'
    - 'https://github.com/thelastpickle/grafonnet-polystat-panel@275a48de57afdac0d72219d82863d8ab8bd0e682'


## Create rules for monitoring the cluster
##
prometheusRules:
  enable: true
  # Label of Jsonnet Prometheus rule resources used for target discovery.
  labelJsonnet:
    prometheus_rule_jsonnet: '1'
  # Label of Prometheus rule resources used for target discovery.
  labelPrometheus:
    prometheus_rule: '1'

## Create dashboards for monitoring the cluster
##
grafanaDashboards:
  enable: true
  # Label of Jsonnet Grafana Dashboard resources used for target discovery.
  labelJsonnet:
    grafana_dashboard_jsonnet: '1'
  # Label of Grafana Dashboard resources used for target discovery.
  labelGrafana:
    grafana_dashboard: '1'
  # Override destination where monitoring dashboards will be saved by grafana sidecar.
  # destinationOverride:
  #   k8s-sidecar-target-directory: "/var/lib/grafana/dashboards/dnation/"


## Kubernetes Monitoring
##
clusterMonitoring:
  enabled: true
  clusters:
  # Cluster Monitoring, multiple cluster monitoring isn't supported yet.
  - name: K8sCluster
    description: 'Kubernetes cluster monitoring'
    apps: []
    # Kubernetes Application Monitoring could be defined by ServiceMonitor or PodMonitor CRDs. See following links and examples:
    # ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#servicemonitor
    # ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#podmonitor
    # See also values examples in helpers directory and projects docs, ref: https://dnationcloud.github.io/kubernetes-monitoring/docs/documentation
    #
    # Application Monitoring using the ServiceMonitor CRD.
    #
    #  - name: app-example-service
    #    description: Example of App Monitoring by ServiceMonitor
    #    jobName: app-example-service  # The job name should be the same as the name which will be retrieved from the `jobLabel`, see the `serviceMonitor` section
    #    templates:
    #      nginxIngress:  # Application Exporter template
    #        enabled: true
    #    serviceMonitor:
    #      jobLabel: app # The label to use to retrieve the job name from.
    #      namespaceSelector:  # Namespaces to transfer from the kubernetes service to the target
    #        ## Match any namespace
    #        # any: true
    #        # Explicit list of namespace names to select
    #        matchNames:
    #        - ingress-nginx
    #      selector:  # Label selector for services to which this ServiceMonitor applies
    #        matchLabels:
    #          app: nginx-ingress
    #        # matchExpressions:
    #        # - key: tier
    #        #   operator: In
    #        #   values:
    #        #   - cache
    #        # - key: environment
    #        #   operator: NotIn
    #        #   values:
    #        #   - dev
    #      # Endpoints of the selected service to be monitored
    #      # ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#endpoint
    #      endpoints:
    #      - targetPort: metrics  # Name or number of the endpoint's target port
    #        interval: 30s  # Interval at which metrics should be scraped
    #        path: /metrics  # HTTP path to scrape for metrics
    #        relabelings:
    #        - *containerLabel
    #
    # Application Monitoring using the PodMonitor CRD.
    #
    #  - name: app-example-pod
    #    description: Example of App Monitoring by PodMonitor
    #    jobName: app-example-pod  # The job name should be the same as the name which will be retrieved from the `jobLabel`, see the `podMonitor` section
    #    templates:
    #      nginxIngress:  # Application Exporter template
    #        enabled: true
    #    podMonitor:
    #      jobLabel: app # The label to use to retrieve the job name from.
    #      namespaceSelector:  # Namespaces to transfer from the kubernetes service to the target
    #        ## Match any namespace
    #        # any: true
    #        # Explicit list of namespace names to select
    #        matchNames:
    #        - ingress-nginx
    #      selector:  # Label selector for services to which this PodMonitor applies
    #        matchLabels:
    #          app: nginx-ingress
    #        # matchExpressions:
    #        # - key: tier
    #        #   operator: In
    #        #   values:
    #        #   - cache
    #        # - key: environment
    #        #   operator: NotIn
    #        #   values:
    #        #   - dev
    #      # Endpoints of the selected pod to be monitored
    #      # https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#podmetricsendpoint
    #      podMetricsEndpoints:
    #      - port: metrics  # Name or number of the endpoint's target port
    #        interval: 30s  # Interval at which metrics should be scraped
    #        path: /metrics  # HTTP path to scrape for metrics

## Host Monitoring
##
hostMonitoring:
  enabled: false
  hosts: []
  # Host Monitoring is defined by host IP address and node exporter port.
  # If you want to monitor applications running on your host (e.g. docker) you may configure application monitoring
  # within the host definition under the `apps` section.
  # See also values examples in helpers directory and projects docs, ref: https://dnationcloud.github.io/kubernetes-monitoring/docs/documentation
  #
  #  - name: host-example
  #    description: Example Host Monitoring
  #    jobName: host-example
  #    host:
  #      address: 1.1.1.1  # Host IP Address
  #    serviceMonitor:
  #      endpoints:
  #      - port: "9100"  # Node Exporter Port
  #        interval: 30s  # Interval at which metrics should be scraped
  #        path: /metrics  # HTTP path to scrape for metrics
  #    apps:
  #    - name: host-example-docker
  #      description: Example Host Application Monitoring
  #      jobName: host-example-docker
  #     templates:
  #       cAdvisor:  # Application Exporter template
  #         enabled: true
  #     serviceMonitor:
  #       endpoints:
  #       - port: "9101"  # Application Exporter Port
  #         interval: 30s  # Interval at which metrics should be scraped
  #         path: /metrics  # HTTP path to scrape for metrics
